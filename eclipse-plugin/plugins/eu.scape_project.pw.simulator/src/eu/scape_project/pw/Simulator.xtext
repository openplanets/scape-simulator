grammar eu.scape_project.pw.Simulator with org.eclipse.xtext.xbase.Xbase

generate simulator "http://www.scape_project.eu/pw/Simulator"

Simulation : 
	'Simulation' name=ValidID '{'
		'runs' '=' runs=INT
		'entities:' (entities+=Entity)*
		'events:' (events+=Event)*
		'scheduling:' (scheduling+=Scheduling)*
	'}'
;

Event :
	'event' name=ValidID '{'
		expression=Expression
	'}'
;

Expression: RExpression | OExpression; 

RExpression : 
	'repeat' number=INT '{'
		(expression+=Expression)+
	'}' 
;

OExpression : PExpression | EExpression | MExpression;

PExpression : leftSide=Identifier '+=' rightSide=INT;
EExpression : leftSide=Identifier '=' rightSide=INT;
MExpression : leftSide=Identifier '-=' rightSide=INT;

Identifier : ID ('.' ID) * '.' ATTRIBUTES;

ATTRIBUTES: 'size';

Entity : Collection ; 

Collection : 
	'collection' name=ID '{' 
		
		('size' '=' size=INT)?
		(subCollections+=Collection)*	
		
	'}' 
;

/* 	
KeyValue : KeyValueInt | KeyValueString | KeyValueDecimal;

KeyValueInt : key=ID ':' value=INT;
KeyValueString :key=ID ':' value=STRING;
KeyValueDecimal:key=ID ':' value=DECIMAL;
*/
Scheduling: EventScheduling | ConditionalScheduling;

EventScheduling :
	'schedule ' schedule=[Event] 
	'{'
		('start''=' start=INT ';')?
		('end' '=' end=INT ';')?
		('every' '=' every=INT ';')?
			
	'}'
;

ConditionalScheduling: 
	observes=[Event] '=>' schedule=[Event] '{'
			('delay' '=' delay=INT ';')?
		'}'
;